function [trainedClassifier, validationAccuracy] = trainClassifier(trainingData,NI)
% [trainedClassifier, validationAccuracy] = trainClassifier(trainingData)
% 学習済み分類器とその 精度 を返します。このコードは分類学習器アプリで学習させた分類モデル
% を再作成します。生成されるコードを使用して、同じモデルでの新規データを使用した学習の自動化
% や、プログラミングによってモデルを学習させる方法の調査を行います。
%
%  入力:
%      trainingData: アプリにインポートされたものと同じ予測子と応答列を含むテーブル。
%
%  出力:
%      trainedClassifier: 学習済みの分類器を含む構造体。この構造体には、学習済みの分類
%       器に関する情報をもつさまざまなフィールドが含まれています。
%
%      trainedClassifier.predictFcn: 新規データに関する予測を行う関数。
%
%      validationAccuracy: パーセント単位の精度を含む double。アプリでは [履歴] リ
%       ストにこの全体的な精度スコアがモデルごとに表示されます。
%
% このコードを使用して新規データでモデルを学習させます。分類器を再学習させるには、元のデータ
% または新規データを入力引数 trainingData として、コマンド ラインから関数を呼び出しま
% す。
%
% たとえば、元のデータセット T で学習させた分類器を再学習させるには、次のように入力します:
%   [trainedClassifier, validationAccuracy] = trainClassifier(T)
%
% 返された 'trainedClassifier' を使用して新規データ T2 の予測を行うには、次を使用しま
% す
%   yfit = trainedClassifier.predictFcn(T2)
%
% T2 は、少なくとも学習中に使用したものと同じ予測列を含むテーブルでなければなりません。詳細
% については、次のように入力してください:
%   trainedClassifier.HowToPredict

% MATLAB からの自動生成日: 2018/07/31 15:30:24


% 予測子と応答の抽出
% このコードは、データを処理して、モデルに学習させるのに適した
% 形状にします。
inputTable = trainingData;
predictorNames = {'dataTable1', 'dataTable2', 'dataTable3', 'dataTable4', 'dataTable5', 'dataTable6', 'dataTable7', 'dataTable8', 'dataTable9', 'dataTable10', 'dataTable11', 'dataTable12', 'dataTable13', 'dataTable14', 'dataTable15', 'dataTable16', 'dataTable17', 'dataTable18', 'dataTable19', 'dataTable20', 'dataTable21', 'dataTable22', 'dataTable23', 'dataTable24', 'dataTable25', 'dataTable26', 'dataTable27', 'dataTable28', 'dataTable29', 'dataTable30', 'dataTable31', 'dataTable32', 'dataTable33', 'dataTable34', 'dataTable35', 'dataTable36', 'dataTable37', 'dataTable38', 'dataTable39', 'dataTable40', 'dataTable41', 'dataTable42', 'dataTable43', 'dataTable44', 'dataTable45', 'dataTable46', 'dataTable47', 'dataTable48', 'dataTable49', 'dataTable50', 'dataTable51', 'dataTable52', 'dataTable53', 'dataTable54', 'dataTable55', 'dataTable56', 'dataTable57', 'dataTable58', 'dataTable59', 'dataTable60', 'dataTable61', 'dataTable62', 'dataTable63', 'dataTable64', 'dataTable65', 'dataTable66', 'dataTable67', 'dataTable68', 'dataTable69', 'dataTable70', 'dataTable71', 'dataTable72', 'dataTable73', 'dataTable74', 'dataTable75', 'dataTable76', 'dataTable77', 'dataTable78', 'dataTable79', 'dataTable80', 'dataTable81', 'dataTable82', 'dataTable83', 'dataTable84', 'dataTable85', 'dataTable86', 'dataTable87', 'dataTable88', 'dataTable89', 'dataTable90', 'dataTable91', 'dataTable92', 'dataTable93', 'dataTable94', 'dataTable95', 'dataTable96', 'dataTable97', 'dataTable98', 'dataTable99', 'dataTable100', 'dataTable101', 'dataTable102', 'dataTable103', 'dataTable104', 'dataTable105', 'dataTable106', 'dataTable107', 'dataTable108', 'dataTable109', 'dataTable110', 'dataTable111', 'dataTable112', 'dataTable113', 'dataTable114', 'dataTable115', 'dataTable116', 'dataTable117', 'dataTable118', 'dataTable119', 'dataTable120', 'dataTable121', 'dataTable122', 'dataTable123', 'dataTable124', 'dataTable125', 'dataTable126', 'dataTable127', 'dataTable128', 'dataTable129', 'dataTable130', 'dataTable131', 'dataTable132', 'dataTable133', 'dataTable134', 'dataTable135', 'dataTable136', 'dataTable137', 'dataTable138', 'dataTable139', 'dataTable140', 'dataTable141', 'dataTable142', 'dataTable143', 'dataTable144', 'dataTable145', 'dataTable146', 'dataTable147', 'dataTable148', 'dataTable149', 'dataTable150', 'dataTable151', 'dataTable152', 'dataTable153', 'dataTable154', 'dataTable155', 'dataTable156', 'dataTable157', 'dataTable158', 'dataTable159', 'dataTable160', 'dataTable161', 'dataTable162', 'dataTable163', 'dataTable164', 'dataTable165', 'dataTable166', 'dataTable167', 'dataTable168', 'dataTable169', 'dataTable170', 'dataTable171', 'dataTable172', 'dataTable173', 'dataTable174', 'dataTable175', 'dataTable176', 'dataTable177', 'dataTable178', 'dataTable179', 'dataTable180', 'dataTable181', 'dataTable182', 'dataTable183', 'dataTable184', 'dataTable185', 'dataTable186', 'dataTable187', 'dataTable188', 'dataTable189', 'dataTable190', 'dataTable191', 'dataTable192', 'dataTable193', 'dataTable194', 'dataTable195', 'dataTable196', 'dataTable197', 'dataTable198', 'dataTable199', 'dataTable200', 'dataTable201', 'dataTable202', 'dataTable203', 'dataTable204', 'dataTable205', 'dataTable206', 'dataTable207', 'dataTable208', 'dataTable209', 'dataTable210', 'dataTable211', 'dataTable212', 'dataTable213', 'dataTable214', 'dataTable215', 'dataTable216', 'dataTable217', 'dataTable218', 'dataTable219', 'dataTable220', 'dataTable221', 'dataTable222', 'dataTable223', 'dataTable224', 'dataTable225', 'dataTable226', 'dataTable227', 'dataTable228', 'dataTable229', 'dataTable230', 'dataTable231', 'dataTable232', 'dataTable233', 'dataTable234', 'dataTable235', 'dataTable236', 'dataTable237', 'dataTable238', 'dataTable239', 'dataTable240', 'dataTable241', 'dataTable242', 'dataTable243', 'dataTable244', 'dataTable245', 'dataTable246', 'dataTable247', 'dataTable248', 'dataTable249', 'dataTable250', 'dataTable251', 'dataTable252', 'dataTable253', 'dataTable254', 'dataTable255', 'dataTable256', 'dataTable257', 'dataTable258', 'dataTable259', 'dataTable260', 'dataTable261', 'dataTable262', 'dataTable263', 'dataTable264', 'dataTable265', 'dataTable266', 'dataTable267', 'dataTable268', 'dataTable269', 'dataTable270', 'dataTable271', 'dataTable272', 'dataTable273', 'dataTable274', 'dataTable275', 'dataTable276', 'dataTable277', 'dataTable278', 'dataTable279', 'dataTable280', 'dataTable281', 'dataTable282', 'dataTable283', 'dataTable284', 'dataTable285', 'dataTable286', 'dataTable287', 'dataTable288', 'dataTable289', 'dataTable290', 'dataTable291', 'dataTable292', 'dataTable293', 'dataTable294', 'dataTable295', 'dataTable296', 'dataTable297', 'dataTable298', 'dataTable299', 'dataTable300', 'dataTable301', 'dataTable302', 'dataTable303', 'dataTable304', 'dataTable305', 'dataTable306', 'dataTable307', 'dataTable308', 'dataTable309', 'dataTable310', 'dataTable311', 'dataTable312', 'dataTable313', 'dataTable314', 'dataTable315', 'dataTable316', 'dataTable317', 'dataTable318', 'dataTable319', 'dataTable320', 'dataTable321', 'dataTable322', 'dataTable323', 'dataTable324', 'dataTable325', 'dataTable326', 'dataTable327', 'dataTable328', 'dataTable329', 'dataTable330', 'dataTable331', 'dataTable332', 'dataTable333', 'dataTable334', 'dataTable335', 'dataTable336', 'dataTable337', 'dataTable338', 'dataTable339', 'dataTable340', 'dataTable341', 'dataTable342', 'dataTable343', 'dataTable344'};
predictorNames = predictorNames(1:NI);
predictors = inputTable(:, predictorNames);
response = inputTable.Labels;
isCategoricalPredictor = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false];

% 分類器の学習
% このコードは、すべての分類器オプションを指定し、分類器に学習させます。
classificationSVM = fitcsvm(...
    predictors, ...
    response, ...
    'KernelFunction', 'gaussian', ...
    'PolynomialOrder', [], ...
    'KernelScale', 19, ...
    'BoxConstraint', 1, ...
    'Standardize', true, ...
    'ClassNames', categorical({'Normal';'Defected'}));

% 関数 predict で結果の構造体を作成
predictorExtractionFcn = @(t) t(:, predictorNames);
svmPredictFcn = @(x) predict(classificationSVM, x);
trainedClassifier.predictFcn = @(x) svmPredictFcn(predictorExtractionFcn(x));

% 結果の構造体にさらにフィールドを追加
trainedClassifier.RequiredVariables = predictorNames;%{'dataTable1', 'dataTable2', 'dataTable3', 'dataTable4', 'dataTable5', 'dataTable6', 'dataTable7', 'dataTable8', 'dataTable9', 'dataTable10', 'dataTable11', 'dataTable12', 'dataTable13', 'dataTable14', 'dataTable15', 'dataTable16', 'dataTable17', 'dataTable18', 'dataTable19', 'dataTable20', 'dataTable21', 'dataTable22', 'dataTable23', 'dataTable24', 'dataTable25', 'dataTable26', 'dataTable27', 'dataTable28', 'dataTable29', 'dataTable30', 'dataTable31', 'dataTable32', 'dataTable33', 'dataTable34', 'dataTable35', 'dataTable36', 'dataTable37', 'dataTable38', 'dataTable39', 'dataTable40', 'dataTable41', 'dataTable42', 'dataTable43', 'dataTable44', 'dataTable45', 'dataTable46', 'dataTable47', 'dataTable48', 'dataTable49', 'dataTable50', 'dataTable51', 'dataTable52', 'dataTable53', 'dataTable54', 'dataTable55', 'dataTable56', 'dataTable57', 'dataTable58', 'dataTable59', 'dataTable60', 'dataTable61', 'dataTable62', 'dataTable63', 'dataTable64', 'dataTable65', 'dataTable66', 'dataTable67', 'dataTable68', 'dataTable69', 'dataTable70', 'dataTable71', 'dataTable72', 'dataTable73', 'dataTable74', 'dataTable75', 'dataTable76', 'dataTable77', 'dataTable78', 'dataTable79', 'dataTable80', 'dataTable81', 'dataTable82', 'dataTable83', 'dataTable84', 'dataTable85', 'dataTable86', 'dataTable87', 'dataTable88', 'dataTable89', 'dataTable90', 'dataTable91', 'dataTable92', 'dataTable93', 'dataTable94', 'dataTable95', 'dataTable96', 'dataTable97', 'dataTable98', 'dataTable99', 'dataTable100', 'dataTable101', 'dataTable102', 'dataTable103', 'dataTable104', 'dataTable105', 'dataTable106', 'dataTable107', 'dataTable108', 'dataTable109', 'dataTable110', 'dataTable111', 'dataTable112', 'dataTable113', 'dataTable114', 'dataTable115', 'dataTable116', 'dataTable117', 'dataTable118', 'dataTable119', 'dataTable120', 'dataTable121', 'dataTable122', 'dataTable123', 'dataTable124', 'dataTable125', 'dataTable126', 'dataTable127', 'dataTable128', 'dataTable129', 'dataTable130', 'dataTable131', 'dataTable132', 'dataTable133', 'dataTable134', 'dataTable135', 'dataTable136', 'dataTable137', 'dataTable138', 'dataTable139', 'dataTable140', 'dataTable141', 'dataTable142', 'dataTable143', 'dataTable144', 'dataTable145', 'dataTable146', 'dataTable147', 'dataTable148', 'dataTable149', 'dataTable150', 'dataTable151', 'dataTable152', 'dataTable153', 'dataTable154', 'dataTable155', 'dataTable156', 'dataTable157', 'dataTable158', 'dataTable159', 'dataTable160', 'dataTable161', 'dataTable162', 'dataTable163', 'dataTable164', 'dataTable165', 'dataTable166', 'dataTable167', 'dataTable168', 'dataTable169', 'dataTable170', 'dataTable171', 'dataTable172', 'dataTable173', 'dataTable174', 'dataTable175', 'dataTable176', 'dataTable177', 'dataTable178', 'dataTable179', 'dataTable180', 'dataTable181', 'dataTable182', 'dataTable183', 'dataTable184', 'dataTable185', 'dataTable186', 'dataTable187', 'dataTable188', 'dataTable189', 'dataTable190', 'dataTable191', 'dataTable192', 'dataTable193', 'dataTable194', 'dataTable195', 'dataTable196', 'dataTable197', 'dataTable198', 'dataTable199', 'dataTable200', 'dataTable201', 'dataTable202', 'dataTable203', 'dataTable204', 'dataTable205', 'dataTable206', 'dataTable207', 'dataTable208', 'dataTable209', 'dataTable210', 'dataTable211', 'dataTable212', 'dataTable213', 'dataTable214', 'dataTable215', 'dataTable216', 'dataTable217', 'dataTable218', 'dataTable219', 'dataTable220', 'dataTable221', 'dataTable222', 'dataTable223', 'dataTable224', 'dataTable225', 'dataTable226', 'dataTable227', 'dataTable228', 'dataTable229', 'dataTable230', 'dataTable231', 'dataTable232', 'dataTable233', 'dataTable234', 'dataTable235', 'dataTable236', 'dataTable237', 'dataTable238', 'dataTable239', 'dataTable240', 'dataTable241', 'dataTable242', 'dataTable243', 'dataTable244', 'dataTable245', 'dataTable246', 'dataTable247', 'dataTable248', 'dataTable249', 'dataTable250', 'dataTable251', 'dataTable252', 'dataTable253', 'dataTable254', 'dataTable255', 'dataTable256', 'dataTable257', 'dataTable258', 'dataTable259', 'dataTable260', 'dataTable261', 'dataTable262', 'dataTable263', 'dataTable264', 'dataTable265', 'dataTable266', 'dataTable267', 'dataTable268', 'dataTable269', 'dataTable270', 'dataTable271', 'dataTable272', 'dataTable273', 'dataTable274', 'dataTable275', 'dataTable276', 'dataTable277', 'dataTable278', 'dataTable279', 'dataTable280', 'dataTable281', 'dataTable282', 'dataTable283', 'dataTable284', 'dataTable285', 'dataTable286', 'dataTable287', 'dataTable288', 'dataTable289', 'dataTable290', 'dataTable291', 'dataTable292', 'dataTable293', 'dataTable294', 'dataTable295', 'dataTable296', 'dataTable297', 'dataTable298', 'dataTable299', 'dataTable300', 'dataTable301', 'dataTable302', 'dataTable303', 'dataTable304', 'dataTable305', 'dataTable306', 'dataTable307', 'dataTable308', 'dataTable309', 'dataTable310', 'dataTable311', 'dataTable312', 'dataTable313', 'dataTable314', 'dataTable315', 'dataTable316', 'dataTable317', 'dataTable318', 'dataTable319', 'dataTable320', 'dataTable321', 'dataTable322', 'dataTable323', 'dataTable324', 'dataTable325', 'dataTable326', 'dataTable327', 'dataTable328', 'dataTable329', 'dataTable330', 'dataTable331', 'dataTable332', 'dataTable333', 'dataTable334', 'dataTable335', 'dataTable336', 'dataTable337', 'dataTable338', 'dataTable339', 'dataTable340', 'dataTable341', 'dataTable342', 'dataTable343', 'dataTable344'};
trainedClassifier.ClassificationSVM = classificationSVM;
trainedClassifier.About = 'この構造体は、分類学習器 R2018a からエクスポートされた学習済みのモデルです。';
trainedClassifier.HowToPredict = sprintf('新しいテーブル T についての予測を行うには、次を使用します: \n yfit = c.predictFcn(T) \n''c'' をこの構造体の変数の名前 (''trainedModel'' など) に置き換えます。 \n \nテーブル T は次によって返される変数を含んでいなければなりません: \n c.RequiredVariables \n変数形式 (行列/ベクトル、データ型など) は元の学習データと一致しなければなりません。 \n追加の変数は無視されます。 \n \n詳細については、<a href="matlab:helpview(fullfile(docroot, ''stats'', ''stats.map''), ''appclassification_exportmodeltoworkspace'')">How to predict using an exported model</a> を参照してください。');

% 予測子と応答の抽出
% このコードは、データを処理して、モデルに学習させるのに適した
% 形状にします。
inputTable = trainingData;
predictorNames = {'dataTable1', 'dataTable2', 'dataTable3', 'dataTable4', 'dataTable5', 'dataTable6', 'dataTable7', 'dataTable8', 'dataTable9', 'dataTable10', 'dataTable11', 'dataTable12', 'dataTable13', 'dataTable14', 'dataTable15', 'dataTable16', 'dataTable17', 'dataTable18', 'dataTable19', 'dataTable20', 'dataTable21', 'dataTable22', 'dataTable23', 'dataTable24', 'dataTable25', 'dataTable26', 'dataTable27', 'dataTable28', 'dataTable29', 'dataTable30', 'dataTable31', 'dataTable32', 'dataTable33', 'dataTable34', 'dataTable35', 'dataTable36', 'dataTable37', 'dataTable38', 'dataTable39', 'dataTable40', 'dataTable41', 'dataTable42', 'dataTable43', 'dataTable44', 'dataTable45', 'dataTable46', 'dataTable47', 'dataTable48', 'dataTable49', 'dataTable50', 'dataTable51', 'dataTable52', 'dataTable53', 'dataTable54', 'dataTable55', 'dataTable56', 'dataTable57', 'dataTable58', 'dataTable59', 'dataTable60', 'dataTable61', 'dataTable62', 'dataTable63', 'dataTable64', 'dataTable65', 'dataTable66', 'dataTable67', 'dataTable68', 'dataTable69', 'dataTable70', 'dataTable71', 'dataTable72', 'dataTable73', 'dataTable74', 'dataTable75', 'dataTable76', 'dataTable77', 'dataTable78', 'dataTable79', 'dataTable80', 'dataTable81', 'dataTable82', 'dataTable83', 'dataTable84', 'dataTable85', 'dataTable86', 'dataTable87', 'dataTable88', 'dataTable89', 'dataTable90', 'dataTable91', 'dataTable92', 'dataTable93', 'dataTable94', 'dataTable95', 'dataTable96', 'dataTable97', 'dataTable98', 'dataTable99', 'dataTable100', 'dataTable101', 'dataTable102', 'dataTable103', 'dataTable104', 'dataTable105', 'dataTable106', 'dataTable107', 'dataTable108', 'dataTable109', 'dataTable110', 'dataTable111', 'dataTable112', 'dataTable113', 'dataTable114', 'dataTable115', 'dataTable116', 'dataTable117', 'dataTable118', 'dataTable119', 'dataTable120', 'dataTable121', 'dataTable122', 'dataTable123', 'dataTable124', 'dataTable125', 'dataTable126', 'dataTable127', 'dataTable128', 'dataTable129', 'dataTable130', 'dataTable131', 'dataTable132', 'dataTable133', 'dataTable134', 'dataTable135', 'dataTable136', 'dataTable137', 'dataTable138', 'dataTable139', 'dataTable140', 'dataTable141', 'dataTable142', 'dataTable143', 'dataTable144', 'dataTable145', 'dataTable146', 'dataTable147', 'dataTable148', 'dataTable149', 'dataTable150', 'dataTable151', 'dataTable152', 'dataTable153', 'dataTable154', 'dataTable155', 'dataTable156', 'dataTable157', 'dataTable158', 'dataTable159', 'dataTable160', 'dataTable161', 'dataTable162', 'dataTable163', 'dataTable164', 'dataTable165', 'dataTable166', 'dataTable167', 'dataTable168', 'dataTable169', 'dataTable170', 'dataTable171', 'dataTable172', 'dataTable173', 'dataTable174', 'dataTable175', 'dataTable176', 'dataTable177', 'dataTable178', 'dataTable179', 'dataTable180', 'dataTable181', 'dataTable182', 'dataTable183', 'dataTable184', 'dataTable185', 'dataTable186', 'dataTable187', 'dataTable188', 'dataTable189', 'dataTable190', 'dataTable191', 'dataTable192', 'dataTable193', 'dataTable194', 'dataTable195', 'dataTable196', 'dataTable197', 'dataTable198', 'dataTable199', 'dataTable200', 'dataTable201', 'dataTable202', 'dataTable203', 'dataTable204', 'dataTable205', 'dataTable206', 'dataTable207', 'dataTable208', 'dataTable209', 'dataTable210', 'dataTable211', 'dataTable212', 'dataTable213', 'dataTable214', 'dataTable215', 'dataTable216', 'dataTable217', 'dataTable218', 'dataTable219', 'dataTable220', 'dataTable221', 'dataTable222', 'dataTable223', 'dataTable224', 'dataTable225', 'dataTable226', 'dataTable227', 'dataTable228', 'dataTable229', 'dataTable230', 'dataTable231', 'dataTable232', 'dataTable233', 'dataTable234', 'dataTable235', 'dataTable236', 'dataTable237', 'dataTable238', 'dataTable239', 'dataTable240', 'dataTable241', 'dataTable242', 'dataTable243', 'dataTable244', 'dataTable245', 'dataTable246', 'dataTable247', 'dataTable248', 'dataTable249', 'dataTable250', 'dataTable251', 'dataTable252', 'dataTable253', 'dataTable254', 'dataTable255', 'dataTable256', 'dataTable257', 'dataTable258', 'dataTable259', 'dataTable260', 'dataTable261', 'dataTable262', 'dataTable263', 'dataTable264', 'dataTable265', 'dataTable266', 'dataTable267', 'dataTable268', 'dataTable269', 'dataTable270', 'dataTable271', 'dataTable272', 'dataTable273', 'dataTable274', 'dataTable275', 'dataTable276', 'dataTable277', 'dataTable278', 'dataTable279', 'dataTable280', 'dataTable281', 'dataTable282', 'dataTable283', 'dataTable284', 'dataTable285', 'dataTable286', 'dataTable287', 'dataTable288', 'dataTable289', 'dataTable290', 'dataTable291', 'dataTable292', 'dataTable293', 'dataTable294', 'dataTable295', 'dataTable296', 'dataTable297', 'dataTable298', 'dataTable299', 'dataTable300', 'dataTable301', 'dataTable302', 'dataTable303', 'dataTable304', 'dataTable305', 'dataTable306', 'dataTable307', 'dataTable308', 'dataTable309', 'dataTable310', 'dataTable311', 'dataTable312', 'dataTable313', 'dataTable314', 'dataTable315', 'dataTable316', 'dataTable317', 'dataTable318', 'dataTable319', 'dataTable320', 'dataTable321', 'dataTable322', 'dataTable323', 'dataTable324', 'dataTable325', 'dataTable326', 'dataTable327', 'dataTable328', 'dataTable329', 'dataTable330', 'dataTable331', 'dataTable332', 'dataTable333', 'dataTable334', 'dataTable335', 'dataTable336', 'dataTable337', 'dataTable338', 'dataTable339', 'dataTable340', 'dataTable341', 'dataTable342', 'dataTable343', 'dataTable344'};
predictorNames = predictorNames(1:NI);
predictors = inputTable(:, predictorNames);
response = inputTable.Labels;
isCategoricalPredictor = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false];

% 交差検証の実行
partitionedModel = crossval(trainedClassifier.ClassificationSVM, 'KFold', 5);

% 検証予測の計算
[validationPredictions, validationScores] = kfoldPredict(partitionedModel);

% 検証精度の計算
validationAccuracy = 1 - kfoldLoss(partitionedModel, 'LossFun', 'ClassifError');
